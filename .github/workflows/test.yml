name: test multiple
on:
  workflow_call:
    inputs:
      projects:
        description: JSON-like list of projects
        type: string
        required: false
      type:
        description: hack
        type: string
        default: workflow_call
  workflow_dispatch:
    inputs:
      all:
        description: all the projects
        type: boolean
        default: false
        required: false
      projects:
        description: comma-separated list
        type: string
        required: false
  schedule:
  # 3rd day of the month at 2 (avoiding 1st day that may have more load)
  - cron: '0 2 3 * *'

jobs:
  inferprojects1:
    if: inputs.type != 'workflow_call'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}
    outputs:
      projects: ${{ steps.set-projects.outputs.projects }}
    steps:
    - uses: actions/checkout@v3
    - name : machine echo env
      env : { CONTENT : "${{ toJson(env) }}" }
      run : "echo $CONTENT"
    - name : machine echo secrets
      env : { CONTENT : "${{ toJson(secrets) }}" }
      run : "echo $CONTENT"
    - name : machine echo github
      env : { CONTENT : "${{ toJson(github) }}" }
      run : "echo $CONTENT"
    - name : machine echo runner
      env : { CONTENT : "${{ toJson(runner) }}" }
      run : "echo $CONTENT"
    - name : machine echo job
      env : { CONTENT : "${{ toJson(job) }}" }
      run : "echo $CONTENT"
    - uses: hmarr/debug-action@v2
    - run: exit 1
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        auto-activate-base: false
        activate-environment: examples-gallery-test
        environment-file: environment-test.yml
    - name: infer project list
      id: set-projects
      run: |
        EVENTNAME="${{ github.event_name }}"
        ALL="${{ inputs.all }}"
        INPUTS="${{ inputs.projects }}"
        if [ "$EVENTNAME" == "workflow_dispatch" ]; then
          if [ "$ALL" == "true" ]; then
            PROJECTS=$(doit list_project_dir_names | tail -n -1)
          else
            echo "$INPUTS" > .projects
            PROJECTS=$(doit list_comma_separated_projects | tail -n -1)
            rm .projects
          fi
        elif [ "$EVENTNAME" == "schedule" ]; then
          PROJECTS=$(doit list_project_dir_names | tail -n -1)
        fi
        echo "Projects to test: $PROJECTS"
        echo "PROJECTS=$PROJECTS" >> $GITHUB_OUTPUT
  inferprojects2:
    needs: inferprojects1
    if: ${{ always() }}
    runs-on: 'ubuntu-latest'
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}
    outputs:
      projects: ${{ steps.set-projects.outputs.projects }}
    steps:
    - name: infer project list
      id: set-projects
      run: |
        if [ "${{ inputs.type  }}" == "workflow_call" ]; then
          PROJECTS="${{ inputs.projects }}"
        else
          PROJECTS="${{ needs.inferprojects1.outputs.projects }}"
        fi
        echo "Projects to test: $PROJECTS"
        echo "PROJECTS=$PROJECTS" >> $GITHUB_OUTPUT
  test:
    needs: inferprojects2
    runs-on: ubuntu-latest
    #if: needs.inferprojects2.outputs.projects != '[]'
    name: Test projects
    #strategy:
     # fail-fast: false
    #  matrix:
     #   project: ${{ fromJson(needs.inferprojects2.outputs.projects) }}
   # uses: pyviz-topics/examples/.github/workflows/test_one.yml@more_workflow_fixes
   # with:
    #  project: ${{ matrix.project }}
    steps:
    - run: |
        echo ${{ needs.inferprojects2.outputs.projects }}
        echo ${{ toJson(needs) }}
