name: build one

on:
  workflow_call:
    inputs:
      project:
        description: Project to test
        required: true
        type: string
      type:
        description: hack
        required: true
        type: string
  workflow_dispatch:
    inputs:
      project:
        description: Project to build (dryrun only)
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3
    - name: debug
      run: | 
        echo "github.event.head.ref ${{ github.event.head.ref }}"
        echo "github.event_name ${{ github.event_name }}"
        echo "inputs.type ${{ inputs.type }}"
    - uses: hmarr/debug-action@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        auto-activate-base: false
        activate-environment: examples-gallery-build
        environment-file: envs/environment-build.yml
    - name: enable libmamba
      run: |
        conda activate base
        conda install conda-libmamba-solver
        conda config --set solver libmamba
    - name: archive project
      run: |
        doit archive_project:${{ inputs.project }}
    - name: move thumbnails
      run: |
        doit move_thumbnails:${{ inputs.project }}
    - name: prepare project
      run: |
        doit prepare_project:${{ inputs.project }}
    - name: process notebooks
      run: |
        doit process_notebooks:${{ inputs.project }}
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.project }}
        path: doc/${{ inputs.project }}/
        retention-days: 3
    - name: deploy project
      # Only push to the branch when the workflow is called by pr_flow.yml -> build.yml
      # Could be updated to allow to build projects using worfklow_dispatch to see
      # the evaluated output of a project.
      if: inputs.type == 'workflow_call'
      run: |
        DIR=${{ inputs.project }}
        # TODO: get the branch name
        BRANCHNAME="tmp_evaluated_${{ github.event.head.ref }}"
        git config user.email "travis@travis.org"
        git config user.name "travis"
        mv ./doc/$DIR ./tmp
        git fetch https://github.com/${GITHUB_REPOSITORY}.git $BRANCHNAME:refs/remotes/$BRANCHNAME || echo "Branch $BRANCHNAME not yet created"
        git switch --orphan $BRANCHNAME
        mkdir -p doc
        git diff
        if [ -d  ./doc/$DIR ]; then rm -rf ./doc/$DIR; fi
        mkdir ./doc/$DIR
        mv ./tmp/* ./doc/$DIR
        rmdir ./tmp
        git add ./doc/$DIR
        git commit -m "adding $DIR"
        # TODO: DRYRUN
        git push --dry-run -f -q "https://pyviz-developers:${{ secrets.GITHUB_TOKEN }}@github.com/pyviz-topics/examples.git" HEAD:$BRANCHNAME
    # TODO: add step with git diff --quiet --exit-code
