name: test+build+doc

on:
  push:
    branches-ignore:
      - "main"
      - "evaluated"
      - "tmp_evaluated_**"

jobs:
  debug:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - name: echo ref_name
      run: echo ${{  github.ref_name }}
    - uses: hmarr/debug-action@v2
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 10
    outputs:
      projects: ${{ steps.set-list.outputs.projects }}
    steps:
    - uses: actions/checkout@v3
    - uses: hmarr/debug-action@v2
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    # - uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     miniconda-version: "latest"
    #     auto-activate-base: false
    #     activate-environment: examples-gallery-test
    #     environment-file: environment-test.yml
    - run: pip install doit pyyaml
    - name: infer project list
      id: set-list
      run: |
        PROJECTS=$(doit list_changed_dirs_with_main | tail -n -1)
        BUILD_MODE="dryrun"
        echo "Projects to test: $PROJECTS"
        echo "Build mode: $BUILD_MODE"
        echo "PROJECTS=$PROJECTS" >> $GITHUB_OUTPUT
        echo "BUILD_MODE=$BUILD_MODE" >> $GITHUB_OUTPUT
  test:
    needs: setup
    uses: pyviz-topics/examples/.github/workflows/test.yml@more_workflow_fixes
    with:
      projects: ${{ needs.setup.outputs.projects }}
  build:
    needs: [setup, test]
    uses: pyviz-topics/examples/.github/workflows/build.yml@more_workflow_fixes
    with:
      projects: ${{ needs.setup.outputs.projects }}
      build_mode: evaluated
  # TODO: Make sure doc runs if the PR does not update a project
  doc:
    needs: [setup, build]
    if: needs.build.result == 'success' || needs.build.result == 'skipped'
    uses: pyviz-topics/examples/.github/workflows/docs.yml@more_workflow_fixes
    with:
      target: dev
      # TODO: validate that's really the short branch name
      evaluated_branch: "tmp_evaluated_${{  github.ref_name }}"
      projects: ${{ needs.setup.outputs.projects }}
