# Build all the projects in dryrun mode:
# - on demand
# - every month
# The list of projects to run is obtained from the repo directories,
# after ignoring a few of them like `doc/`
name: build_all

on: 
  workflow_dispatch:
    inputs:
      target:
        description: Build mode
        type: choice
        options:
        # - evaluated
        - dryrun
        required: true
        default: dryrun

jobs:
  get-build-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set matrix
        id: set-matrix
        shell:  bash -l {0}
        # List the directories
        # Remove the ending /
        # Filter out some directories
        # Add "" around each directory name
        # Turn the stream into a list
        # Remove the last , character
        # Add [] around the list 
        run: |
          PROJECTS=$(ls -d */ \
          | sed 's/.$//' \
          | grep -v '__pycache__\|template\|doc\|test_data' \
          | sed 's/^/"/' \
          | sed 's/$/"/'  \
          | tr '\n' ',' \
          | sed 's/.$//' \
          | sed 's/^/[/' \
          | sed 's/$/]/')
          echo $PROJECTS
          echo "::set-output name=project_matrix::$PROJECTS"
    outputs:
      project_matrix: ${{ steps.set-matrix.outputs.project_matrix }}
  build:
    name: Build project ${{ matrix.project }} in ${{ github.event.inputs.target }} mode
    needs: get-build-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.get-build-matrix.outputs.project_matrix) }}
    steps:
    - uses: actions/checkout@v3
    - name: Build project
      uses: ./.github/actions/build_one
      with:
        target: ${{ github.event.inputs.target }}
        project: ${{ matrix.project }}
        gh_token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Trigger downstream test workflow and wait
    #   uses: convictional/trigger-workflow-and-wait@v1.6.3
    #   with:
    #     github_token: ${{ secrets.ACCESS_TOKEN }}
    #     workflow_file_name: build.yaml
    #     ref: main
    #     wait_interval: 120
    #     propagate_failure: true
    #     trigger_workflow: true
    #     wait_workflow: true
