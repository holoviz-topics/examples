name: build_all

on: 
  workflow_dispatch:
    inputs:
      target:
        description: Build mode
        type: choice
        options:
        # - evaluated
        - dryrun
        required: true
        default: dryrun

jobs:
  get-build-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        shell:  bash -l {0}
        run: |
          PROJECTS=$(ls -d */ \
          | sed 's/.$//' \
          | grep -v '__pycache__\|template\|doc\|test_data' \
          | sed 's/^/"/' \
          | sed 's/$/"/'  \
          | tr '\n' ',' \
          | sed 's/.$//' \
          | sed 's/^/[/' \
          | sed 's/$/]/')
          echo $PROJECTS
          echo "::set-output name=project_matrix::$PROJECTS"
    outputs:
      project_matrix: ${{ steps.set-matrix.outputs.project_matrix }}
  build:
    name: Build all the projects in ${{ github.event.inputs.target }} mode
    needs: get-build-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     project: ${{ fromJson(needs.get-build-matrix.outputs.project_matrix) }}
    steps:
    - name: debug
      shell: bash
      run: echo ${{ needs.get-build-matrix.outputs.project_matrix }}
    - name: Build project ${{ matrix.project }}
      uses: ./.github/actions/build_one
      with:
        target: ${{ github.event.inputs.target }}
        project: ${{ matrix.project }}
        gh_token: ${{ secrets.GITHUB_TOKEN }}
